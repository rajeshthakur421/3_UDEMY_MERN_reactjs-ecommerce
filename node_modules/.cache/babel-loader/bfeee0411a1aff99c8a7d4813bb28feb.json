{"ast":null,"code":"import _objectSpread from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddCategory = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1]; // destructure user and token from localstorage\n\n\n  const _isAuthenticated = isAuthenticated(),\n        user = _isAuthenticated.user,\n        token = _isAuthenticated.token;\n\n  const initialName = {\n    key: \"clientName\",\n    value: \"\",\n    error: false,\n    touched: false,\n    regex: /^[A-Za-z]/,\n    required: true\n  };\n\n  const _useState7 = useState(initialName),\n        _useState8 = _slicedToArray(_useState7, 2),\n        clientName = _useState8[0],\n        setclientName = _useState8[1];\n\n  const validate = obj => {\n    let error;\n\n    if (!obj.value) {\n      error = \"Required\";\n    } else if (!obj.regex.test(obj.value)) {\n      error = \"Invalid \".concat(obj.key);\n    }\n\n    return error;\n  };\n\n  const isError = obj => obj.error && obj.touched && obj.required;\n\n  const notify = () => toast.success(\"Changes Done!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  });\n\n  const submitData = e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setclientName(_objectSpread({}, clientName, {\n      error: validate(clientName),\n      touched: true\n    }));\n    setclientAddress(_objectSpread({}, clientAddress, {\n      error: validate(clientAddress),\n      touched: true\n    }));\n    setclientArea(_objectSpread({}, clientArea, {\n      error: validate(clientArea),\n      touched: true\n    }));\n    setclientContact(_objectSpread({}, clientContact, {\n      error: validate(clientContact),\n      touched: true\n    }));\n    setclientAltContact(_objectSpread({}, clientAltContact, {\n      error: validate(clientAltContact),\n      touched: true\n    }));\n    setserviceHrs(_objectSpread({}, serviceHrs, {\n      error: validate(serviceHrs),\n      touched: true\n    }));\n    setclientAmount(_objectSpread({}, clientAmount, {\n      error: validate(clientAmount),\n      touched: true\n    }));\n\n    if (!clientName.error && !clientAddress.error && !clientArea.error && !clientContact.error && !clientAltContact.error && !clientAmount.error) {\n      const empData = {\n        clientName: clientName.value,\n        clientAddress: clientAddress.value,\n        clientArea: clientArea.value.value,\n        clientContact: clientContact.value,\n        clientAltContact: clientAltContact.value,\n        serviceHrs: serviceHrs.value,\n        clientAmount: clientAmount.value // console.log(\"empData\", empData);\n\n      };\n      axios.post('http://www.muktainursesbureau.in/API/insertclient.php', empData).then(res => {\n        // console.log(\"res\", res);\n        getClientdata();\n        notify();\n        afterclose();\n        return res;\n      }).catch(err => {\n        console.log(\"err\", ...err);\n      });\n      setTimeout(() => {\n        setclientName(initialName);\n        setclientAddress(initialAddress);\n        setclientArea(initialclientArea);\n        setclientContact(initialContact);\n        setclientAltContact(initialAltContact);\n        setserviceHrs(initialServiceHrs);\n        setclientAmount(initialclientAmount);\n        setIsSubmitting(false);\n      }, 1000);\n    } else {\n      setIsSubmitting(false);\n    }\n  };\n\n  const newCategoryFom = () => React.createElement(\"form\", {\n    id: \"registrationForm\",\n    action: \"/\",\n    method: \"POST\",\n    onSubmit: e => submitData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Col, {\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Enter Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientName\",\n    value: clientName.value,\n    placeholder: \"Enter Name\",\n    onChange: e => setclientName(_objectSpread({}, clientName, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientName(_objectSpread({}, clientName, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), isError(clientName) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, clientName.error)))))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"float-end\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Submit\"));\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Back to Dashboard\"));\n\n  return React.createElement(Layout, {\n    title: \"Add a new category\",\n    description: \"G'day ready to add a new category?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, newCategoryFom(), goBack())));\n};\n\nexport default AddCategory;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","AddCategory","name","setName","error","setError","success","setSuccess","user","token","initialName","key","value","touched","regex","required","clientName","setclientName","validate","obj","test","isError","notify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","submitData","e","preventDefault","setIsSubmitting","setclientAddress","clientAddress","setclientArea","clientArea","setclientContact","clientContact","setclientAltContact","clientAltContact","setserviceHrs","serviceHrs","setclientAmount","clientAmount","empData","axios","post","then","res","getClientdata","afterclose","catch","err","console","log","setTimeout","initialAddress","initialclientArea","initialContact","initialAltContact","initialServiceHrs","initialclientAmount","newCategoryFom","Row","target","isSubmitting","goBack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddCategory = () => {\n    \n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const { user, token } = isAuthenticated();\n\n    const initialName = {\n      key: \"clientName\",\n      value: \"\",\n      error: false,\n      touched: false,\n      regex: /^[A-Za-z]/,\n      required: true\n    };\n\n    const [clientName, setclientName] = useState(initialName);\n    \n    const validate = (obj) => {\n      let error;\n      if (!obj.value) {\n        error = \"Required\";\n      } else if (!obj.regex.test(obj.value)) {\n        error = `Invalid ${obj.key}`;\n      }\n      return error;\n    };\n\n    const isError = obj => obj.error && obj.touched && obj.required;\n    const notify = () => toast.success(\"Changes Done!\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n    const submitData = (e) => {\n      e.preventDefault();\n      setIsSubmitting(true);\n  \n      setclientName({ ...clientName, error: validate(clientName), touched: true });\n      setclientAddress({ ...clientAddress, error: validate(clientAddress), touched: true });\n      setclientArea({ ...clientArea, error: validate(clientArea), touched: true });\n      setclientContact({ ...clientContact, error: validate(clientContact), touched: true });\n      setclientAltContact({ ...clientAltContact, error: validate(clientAltContact), touched: true });\n      setserviceHrs({ ...serviceHrs, error: validate(serviceHrs), touched: true });\n      setclientAmount({ ...clientAmount, error: validate(clientAmount), touched: true });\n  \n  \n  \n      if (!clientName.error && !clientAddress.error && !clientArea.error && !clientContact.error && !clientAltContact.error && !clientAmount.error) {\n        const empData = {\n          clientName: clientName.value,\n          clientAddress: clientAddress.value,\n          clientArea: clientArea.value.value,\n          clientContact: clientContact.value,\n          clientAltContact: clientAltContact.value,\n          serviceHrs: serviceHrs.value,\n          clientAmount: clientAmount.value\n        }\n  \n        // console.log(\"empData\", empData);\n  \n        axios.post('http://www.muktainursesbureau.in/API/insertclient.php', empData).then((res) => {\n          // console.log(\"res\", res);\n          getClientdata();\n          notify()\n          afterclose();\n          return res\n        }).catch((err) => {\n          console.log(\"err\", ...err)\n        })\n  \n        setTimeout(() => {\n  \n          setclientName(initialName);\n          setclientAddress(initialAddress);\n          setclientArea(initialclientArea)\n          setclientContact(initialContact);\n          setclientAltContact(initialAltContact);\n          setserviceHrs(initialServiceHrs);\n          setclientAmount(initialclientAmount);\n          setIsSubmitting(false);\n        }, 1000);\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n\n    const newCategoryFom = () => (\n      <form\n      id=\"registrationForm\"\n      action=\"/\"\n      method=\"POST\"\n      onSubmit={(e) => submitData(e)}\n    >\n      <Container>\n        <Row>\n          <ToastContainer />\n          <Col sm=\"6\">\n\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextname\">\n              <Col sm=\"12\">\n                <Form.Label>Enter Name</Form.Label>\n\n                <Form.Control type=\"text\"\n                  name=\"clientName\"\n                  value={clientName.value}\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setclientName({ ...clientName, value: e.target.value })}\n                  onBlur={() => setclientName({ ...clientName, touched: true })}\n                />\n\n                {isError(clientName) && <p className='text-danger'>{clientName.error}</p>}\n\n              </Col>\n            </Form.Group>\n          </Col>\n          \n        </Row>\n      </Container>\n      <hr />\n      {/* <Button className='float-right'>Submit</Button> */}\n      <Button className='float-end' type=\"submit\" disabled={isSubmitting}>\n        Submit\n      </Button>\n    </form>\n    );\n\n    \n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to Dashboard\n            </Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Add a new category\"\n            description={`G'day ready to add a new category?`}\n        >\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {/* {showSuccess()} */}\n                    {/* {showError()} */}\n                    {newCategoryFom()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddCategory;\n"]},"metadata":{},"sourceType":"module"}