{"ast":null,"code":"import _objectSpread from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios'; // import { Authcontext } from '../../../config/AppRoutes'\n\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport SelectDropdown from '../../component/SelectDropdown';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst initialName = {\n  key: \"clientName\",\n  value: \"\",\n  error: false,\n  touched: false,\n  regex: /^[A-Za-z]/,\n  required: true\n};\n\nconst AddUser = () => {\n  const auth = useContext(Authcontext); // console.log(\"Auth\", auth.state)\n\n  const _useState = useState(initialName),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientName = _useState2[0],\n        setclientName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitting = _useState4[0],\n        setIsSubmitting = _useState4[1];\n\n  const validate = obj => {\n    let error;\n\n    if (!obj.value) {\n      error = \"Required\";\n    } else if (!obj.regex.test(obj.value)) {\n      error = \"Invalid \".concat(obj.key);\n    }\n\n    return error;\n  };\n\n  const isError = obj => obj.error && obj.touched && obj.required;\n\n  const notify = () => toast.success(\"Changes Done!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  });\n\n  const submitData = e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setclientName(_objectSpread({}, clientName, {\n      error: validate(clientName),\n      touched: true\n    }));\n\n    if (!clientName.error) {\n      const empData = {\n        clientName: clientName.value // console.log(\"empData\", empData);\n\n      };\n      axios.post('', empData).then(res => {\n        // console.log(\"res\", res);\n        notify(); // afterclose();\n\n        return res;\n      }).catch(err => {\n        console.log(\"err\", ...err);\n      });\n      setTimeout(() => {\n        setclientName(initialName);\n        setIsSubmitting(false);\n      }, 1000);\n    } else {\n      setIsSubmitting(false);\n    }\n  }; // useEffect(() => {\n  //   // getAreas();\n  //   test();\n  // }, []);\n\n\n  useEffect(() => {\n    setclientName(_objectSpread({}, clientName, {\n      error: validate(clientName)\n    }));\n  }, [clientName.value]);\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    id: \"registrationForm\",\n    action: \"/\",\n    method: \"POST\",\n    onSubmit: e => submitData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Col, {\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Enter Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientName\",\n    value: clientName.value,\n    placeholder: \"Enter Name\",\n    onChange: e => setclientName(_objectSpread({}, clientName, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientName(_objectSpread({}, clientName, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), isError(clientName) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, clientName.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextaddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Select Client Area\"), React.createElement(SelectDropdown, {\n    name: \"clientArea\",\n    value: clientArea.value,\n    data: {\n      list: areaOptions\n    },\n    isMulti: false,\n    isSearchable: true,\n    onChange: e => {\n      setclientArea(_objectSpread({}, clientArea, {\n        value: e\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), isError(clientArea) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, clientArea.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextaddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Enter Client Address\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientAddress\",\n    value: clientAddress.value,\n    placeholder: \"Enter Address\",\n    onChange: e => setclientAddress(_objectSpread({}, clientAddress, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientAddress(_objectSpread({}, clientAddress, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), isError(clientAddress) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, clientAddress.error)))))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"float-end\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default AddUser;\nconst formstyle = {\n  border: '1px solid',\n  // width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  width: '30vw',\n  margin: '0 auto'\n};\nconst forminputfield = {\n  margin: '10px'\n};","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","useContext","useEffect","axios","Button","Col","Container","Form","Row","SelectDropdown","ToastContainer","toast","initialName","key","value","error","touched","regex","required","AddUser","auth","Authcontext","clientName","setclientName","isSubmitting","setIsSubmitting","validate","obj","test","isError","notify","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","submitData","e","preventDefault","empData","post","then","res","catch","err","console","log","setTimeout","target","clientArea","list","areaOptions","setclientArea","clientAddress","setclientAddress","formstyle","border","display","alignItems","justifyContent","flexDirection","width","margin","forminputfield"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n// import { Authcontext } from '../../../config/AppRoutes'\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport SelectDropdown from '../../component/SelectDropdown';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialName = {\n  key: \"clientName\",\n  value: \"\",\n  error: false,\n  touched: false,\n  regex: /^[A-Za-z]/,\n  required: true\n};\n\n\n\nconst AddUser = () => {\n\n\n  const auth = useContext(Authcontext);\n  // console.log(\"Auth\", auth.state)\n  const [clientName, setclientName] = useState(initialName);\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n\n\n  const validate = (obj) => {\n    let error;\n    if (!obj.value) {\n      error = \"Required\";\n    } else if (!obj.regex.test(obj.value)) {\n      error = `Invalid ${obj.key}`;\n    }\n    return error;\n  };\n\n\n  const isError = obj => obj.error && obj.touched && obj.required;\n\n  \n  const notify = () => toast.success(\"Changes Done!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\n  const submitData = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    setclientName({ ...clientName, error: validate(clientName), touched: true });\n\n    if (!clientName.error) {\n      const empData = {\n        clientName: clientName.value,\n      }\n\n      // console.log(\"empData\", empData);\n\n      axios.post('', empData).then((res) => {\n        // console.log(\"res\", res);\n        notify()\n        // afterclose();\n        return res\n      }).catch((err) => {\n        console.log(\"err\", ...err)\n      })\n\n      setTimeout(() => {\n\n        setclientName(initialName);\n        setIsSubmitting(false);\n      }, 1000);\n    } else {\n      setIsSubmitting(false);\n    }\n  }\n\n\n  // useEffect(() => {\n  //   // getAreas();\n  //   test();\n  // }, []);\n\n\n  useEffect(() => {\n    setclientName({ ...clientName, error: validate(clientName) })\n  }, [clientName.value])\n\n  return (\n    <>\n      <form\n        id=\"registrationForm\"\n        action=\"/\"\n        method=\"POST\"\n        onSubmit={(e) => submitData(e)}\n      >\n        <Container>\n          <Row>\n            <ToastContainer />\n            <Col sm=\"6\">\n\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextname\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Name</Form.Label>\n\n                  <Form.Control type=\"text\"\n                    name=\"clientName\"\n                    value={clientName.value}\n                    placeholder=\"Enter Name\"\n                    onChange={(e) => setclientName({ ...clientName, value: e.target.value })}\n                    onBlur={() => setclientName({ ...clientName, touched: true })}\n                  />\n\n                  {isError(clientName) && <p className='text-danger'>{clientName.error}</p>}\n\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextaddress\">\n                <Col sm=\"12\">\n                  <Form.Label>Select Client Area</Form.Label>\n                  <SelectDropdown\n                    name=\"clientArea\"\n                    value={clientArea.value}\n                    data={{ list: areaOptions }}\n                    isMulti={false}\n                    isSearchable={true}\n                    onChange={(e) => {\n                      setclientArea({ ...clientArea, value: e })\n                    }}\n                  />\n                  {isError(clientArea) && <p className='text-danger'>{clientArea.error}</p>}\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextaddress\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Client Address</Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"clientAddress\"\n                    value={clientAddress.value}\n                    placeholder=\"Enter Address\"\n                    onChange={(e) => setclientAddress({ ...clientAddress, value: e.target.value })}\n                    onBlur={() => setclientAddress({ ...clientAddress, touched: true })}\n                  />\n                  {isError(clientAddress) && <p className='text-danger'>{clientAddress.error}</p>}\n                </Col>\n              </Form.Group>\n\n\n            </Col>\n            \n          </Row>\n        </Container>\n        <hr />\n        {/* <Button className='float-right'>Submit</Button> */}\n        <Button className='float-end' type=\"submit\" disabled={isSubmitting}>\n          Submit\n        </Button>\n      </form>\n    </>\n  );\n\n}\n\nexport default AddUser;\n\n\nconst formstyle = {\n  border: '1px solid',\n  // width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  width: '30vw',\n  margin: '0 auto',\n}\nconst forminputfield = {\n  margin: '10px'\n}\n"]},"metadata":{},"sourceType":"module"}