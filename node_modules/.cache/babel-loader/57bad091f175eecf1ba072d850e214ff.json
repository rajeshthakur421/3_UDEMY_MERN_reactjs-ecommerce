{"ast":null,"code":"import _objectSpread from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport InputField from \"./form-fields/InputField\";\n\nfunction AddUser() {\n  const _useState = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const formFields = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    label: \"Username\",\n    errorMessage: \"Username should be 3-16 characters and shouldn't include any special character!\",\n    required: true,\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    autocomplete: \"off\"\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    label: \"Email\",\n    errorMessage: \"It should be valid email address!\",\n    required: true,\n    autocomplete: \"off\"\n  }, {\n    id: 3,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    label: \"Password\",\n    errorMessage: \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n    required: true,\n    pattern: \"^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$\",\n    autocomplete: \"off\"\n  }, {\n    id: 4,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    label: \"Confirm Password\",\n    errorMessage: \"Password don't match!\",\n    required: true,\n    pattern: values.password,\n    autocomplete: \"off\"\n  }];\n\n  const onChange = e => {\n    setValues(_objectSpread({}, values, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, formFields.map(field => React.createElement(InputField, Object.assign({\n    key: field.id\n  }, field, {\n    value: values[field.name],\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    class: \"button\",\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","InputField","AddUser","username","email","password","confirmPassword","values","setValues","formFields","id","name","type","placeholder","label","errorMessage","required","pattern","autocomplete","onChange","e","target","value","handleSubmit","preventDefault","map","field"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,OAAT,GAAmB;AAAA,oBACaF,QAAQ,CAAC;AACjCG,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,eAAe,EAAE;AAJgB,GAAD,CADrB;AAAA;AAAA,QACRC,MADQ;AAAA,QACAC,SADA;;AAQf,QAAMC,UAAU,GAAG,CACf;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,IAAI,EAAE,MAHV;AAIIC,IAAAA,WAAW,EAAE,UAJjB;AAKIC,IAAAA,KAAK,EAAE,UALX;AAMIC,IAAAA,YAAY,EACR,iFAPR;AAQIC,IAAAA,QAAQ,EAAE,IARd;AASIC,IAAAA,OAAO,EAAE,qBATb;AAUIC,IAAAA,YAAY,EAAE;AAVlB,GADe,EAaf;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,IAAI,EAAE,OAHV;AAIIC,IAAAA,WAAW,EAAE,OAJjB;AAKIC,IAAAA,KAAK,EAAE,OALX;AAMIC,IAAAA,YAAY,EAAE,mCANlB;AAOIC,IAAAA,QAAQ,EAAE,IAPd;AAQIE,IAAAA,YAAY,EAAE;AARlB,GAbe,EAuBf;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,IAAI,EAAE,UAHV;AAIIC,IAAAA,WAAW,EAAE,UAJjB;AAKIC,IAAAA,KAAK,EAAE,UALX;AAMIC,IAAAA,YAAY,EACR,qGAPR;AAQIC,IAAAA,QAAQ,EAAE,IARd;AASIC,IAAAA,OAAO,wEATX;AAUIC,IAAAA,YAAY,EAAE;AAVlB,GAvBe,EAmCf;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,iBAFV;AAGIC,IAAAA,IAAI,EAAE,UAHV;AAIIC,IAAAA,WAAW,EAAE,kBAJjB;AAKIC,IAAAA,KAAK,EAAE,kBALX;AAMIC,IAAAA,YAAY,EAAE,uBANlB;AAOIC,IAAAA,QAAQ,EAAE,IAPd;AAQIC,IAAAA,OAAO,EAAEV,MAAM,CAACF,QARpB;AASIa,IAAAA,YAAY,EAAE;AATlB,GAnCe,CAAnB;;AAgDA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBZ,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACa,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAAxC,OAAT;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACH,GAFD;;AAIA,SACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,UAAU,CAACgB,GAAX,CAAgBC,KAAD,IACZ,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAAChB;AADf,KAEQgB,KAFR;AAGI,IAAA,KAAK,EAAEnB,MAAM,CAACmB,KAAK,CAACf,IAAP,CAHjB;AAII,IAAA,QAAQ,EAAEQ,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,CADL,EASI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ;AAeH;;AAED,eAAejB,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport InputField from \"./form-fields/InputField\";\n\nfunction AddUser() {\n    const [values, setValues] = useState({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n\n    const formFields = [\n        {\n            id: 1,\n            name: \"username\",\n            type: \"text\",\n            placeholder: \"Username\",\n            label: \"Username\",\n            errorMessage:\n                \"Username should be 3-16 characters and shouldn't include any special character!\",\n            required: true,\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\n            autocomplete: \"off\",\n        },\n        {\n            id: 2,\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            label: \"Email\",\n            errorMessage: \"It should be valid email address!\",\n            required: true,\n            autocomplete: \"off\",\n        },\n        {\n            id: 3,\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            label: \"Password\",\n            errorMessage:\n                \"Password should be 8-20 characters and include at least 1 letter, 1 number and 1 special character!\",\n            required: true,\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n            autocomplete: \"off\",\n        },\n        {\n            id: 4,\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            label: \"Confirm Password\",\n            errorMessage: \"Password don't match!\",\n            required: true,\n            pattern: values.password,\n            autocomplete: \"off\",\n        },\n    ];\n\n    const onChange = (e) => {\n        setValues({ ...values, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {formFields.map((field) => (\n                <InputField\n                    key={field.id}\n                    {...field}\n                    value={values[field.name]}\n                    onChange={onChange}\n                />\n            ))}\n            <button class=\"button\" role=\"button\">\n                Submit\n            </button>\n        </form>\n    );\n}\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}