{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport useInput from '../hooks/use-input';\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@');\n\nconst BasicForm = props => {\n  const _useInput = useInput(isNotEmpty),\n        firstNameValue = _useInput.value,\n        firstNameIsValid = _useInput.isValid,\n        firstNameHasError = _useInput.hasError,\n        firstNameChangeHandler = _useInput.valueChangeHandler,\n        firstNameBlurHandler = _useInput.inputBlurHandler,\n        resetFirstName = _useInput.reset;\n\n  const _useInput2 = useInput(isNotEmpty),\n        lastNameValue = _useInput2.value,\n        lastNameIsValid = _useInput2.isValid,\n        lastNameHasError = _useInput2.hasError,\n        lastNameChangeHandler = _useInput2.valueChangeHandler,\n        lastNameBlurHandler = _useInput2.inputBlurHandler,\n        resetLastName = _useInput2.reset;\n\n  const _useInput3 = useInput(isEmail),\n        emailValue = _useInput3.value,\n        emailIsValid = _useInput3.isValid,\n        emailHasError = _useInput3.hasError,\n        emailChangeHandler = _useInput3.valueChangeHandler,\n        emailBlurHandler = _useInput3.inputBlurHandler,\n        resetEmail = _useInput3.reset;\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, emailValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: firstNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: firstNameValue,\n    onChange: firstNameChangeHandler,\n    onBlur: firstNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), firstNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Please enter a first name.\")), React.createElement(\"div\", {\n    className: lastNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: lastNameValue,\n    onChange: lastNameChangeHandler,\n    onBlur: lastNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), lastNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Please enter a last name.\"))), React.createElement(\"div\", {\n    className: emailClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"E-Mail Address\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: emailValue,\n    onChange: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), emailHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Please enter a valid email address.\")), React.createElement(\"div\", {\n    className: \"form-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !formIsValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default BasicForm;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["useInput","isNotEmpty","value","trim","isEmail","includes","BasicForm","props","firstNameValue","firstNameIsValid","isValid","firstNameHasError","hasError","firstNameChangeHandler","valueChangeHandler","firstNameBlurHandler","inputBlurHandler","resetFirstName","reset","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","submitHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses"],"mappings":"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","sourcesContent":["import useInput from '../hooks/use-input';\n\nconst isNotEmpty = (value) => value.trim() !== '';\nconst isEmail = (value) => value.includes('@');\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, emailValue);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={firstNameClasses}>\n          <label htmlFor='name'>First Name</label>\n          <input\n            type='text'\n            id='name'\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">Please enter a first name.</p>}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor='name'>Last Name</label>\n          <input\n            type='text'\n            id='name'\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && <p className=\"error-text\">Please enter a last name.</p>}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input\n          type='text'\n          id='name'\n          value={emailValue}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p className=\"error-text\">Please enter a valid email address.</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;"]},"metadata":{},"sourceType":"module"}