{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/user/Register.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport TextField from './TextField';\nimport * as Yup from 'yup';\n\nconst Register = () => {\n  const validate = Yup.object({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 character or less').required('Required'),\n    email: Yup.string().email('Email is envalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at lest 6 char').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'password must be same').required('Confrim password is required')\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, formik => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    \"mt-3\": true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"First Name\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Last Name\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Emai\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Password\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Confirm Password\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/user/Register.js"],"names":["React","Formik","Form","TextField","Yup","Register","validate","object","firstName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","values","console","log","formik"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport TextField  from './TextField';\nimport * as Yup from 'yup';\n\nconst Register = () => {\n    const validate = Yup.object({\n        firstName : Yup.string()\n            .max(15,'Must be 15 characters or less')\n            .required('Required'),\n        lastName: Yup.string()\n            .max(20,'Must be 20 character or less')\n            .required('Required'),\n        email : Yup.string()\n            .email('Email is envalid')\n            .required('Email is required'),\n        password : Yup.string()\n            .min(6, 'Password must be at lest 6 char')\n            .required('Password is required'),\n        confirmPassword : Yup.string()\n            .oneOf([Yup.ref('password'),null],'password must be same')\n            .required('Confrim password is required'),    \n\n\n    })\n    return (\n        <Formik\n            initialValues={\n                {\n                    firstName : '',\n                    lastName : '',\n                    email : '',\n                    password : '',\n                    confirmPassword : ''\n                }                \n            }\n            validationSchema = {validate}\n            onSubmit = {values => {\n                console.log(values);\n            }}\n        >\n\n        {formik => (\n                <div>\n                    <div className='container' mt-3>\n                    <div className='row'>\n                        <div className='col-md-5'></div>\n                    <h1>Sign Up</h1>\n\n                        <form>\n                            <TextField label=\"First Name\" type=\"text\" />\n                            <TextField label=\"Last Name\" type=\"text\" />\n                            <TextField label=\"Emai\" type=\"text\" />\n                            <TextField label=\"Password\" type=\"text\" />\n                            <TextField label=\"Confirm Password\" type=\"text\" />\n                            <button type='submit' />\n                            <button type='reset' />\n                        </form>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        </Formik>\n    );\n};\nexport default Register;"]},"metadata":{},"sourceType":"module"}