{"ast":null,"code":"import _objectSpread from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction RegistrationView() {\n  const _useState = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputValues = _useState2[0],\n        setInputValue = _useState2[1];\n\n  const _useState3 = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        validation = _useState4[0],\n        setValidation = _useState4[1]; //handle submit updates\n\n\n  function handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setInputValue(_objectSpread({}, inputValues, {\n      [name]: value\n    }));\n  }\n\n  const checkValidation = () => {\n    let errors = validation; //first Name validation\n\n    if (!inputValues.fName.trim()) {\n      errors.fName = \"First name is required\";\n    } else {\n      errors.fName = \"\";\n    } //last Name validation\n\n\n    if (!inputValues.lName.trim()) {\n      errors.lName = \"Last name is required\";\n    } else {\n      errors.lName = \"\";\n    } // email validation\n\n\n    const emailCond = \"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$/\";\n\n    if (!inputValues.email.trim()) {\n      errors.email = \"Email is required\";\n    } else if (!inputValues.email.match(emailCond)) {\n      errors.email = \"Please ingress a valid email address\";\n    } else {\n      errors.email = \"\";\n    } //password validation\n\n\n    const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n    const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n    const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n    const password = inputValues.password;\n\n    if (!password) {\n      errors.password = \"password is required\";\n    } else if (password.length < 6) {\n      errors.password = \"Password must be longer than 6 characters\";\n    } else if (password.length >= 20) {\n      errors.password = \"Password must shorter than 20 characters\";\n    } else if (!password.match(cond1)) {\n      errors.password = \"Password must contain at least one lowercase\";\n    } else if (!password.match(cond2)) {\n      errors.password = \"Password must contain at least one capital letter\";\n    } else if (!password.match(cond3)) {\n      errors.password = \"Password must contain at least a number\";\n    } else {\n      errors.password = \"\";\n    } //matchPassword validation\n\n\n    if (!inputValues.confirmPassword) {\n      errors.confirmPassword = \"Password confirmation is required\";\n    } else if (inputValues.confirmPassword !== inputValues.Password) {\n      errors.confirmPassword = \"Password does not match confirmation password\";\n    } else {\n      errors.password = \"\";\n    }\n\n    setValidation(errors);\n  };\n\n  useEffect(() => {\n    checkValidation();\n  }, [inputValues]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sign-up-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"registrationForm\",\n    action: \"/\",\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"First Name\",\n    type: \"string\",\n    name: \"fName\",\n    id: \"fName\",\n    className: \"input-field\",\n    onChange: e => handleChange(e),\n    value: inputValues.fName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), validation.fName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, validation.fName), validation.fName && console.log(validation)), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Last Name\",\n    type: \"string\",\n    id: \"lName\",\n    name: \"lName\",\n    className: \"input-field\",\n    onChange: e => handleChange(e),\n    value: inputValues.lName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), validation.lName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, validation.lName)), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"email\",\n    type: \"email\",\n    name: \"email\",\n    className: \"input-field\",\n    onChange: e => handleChange(e),\n    value: inputValues.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), validation.email && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, validation.email), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\",\n    name: \"password\",\n    className: \"input-field\",\n    onChange: e => handleChange(e),\n    value: inputValues.password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), validation.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, validation.password)), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"confirm password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    className: \"input-field\",\n    onChange: e => handleChange(e),\n    value: inputValues.confirmPassword,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"span\", {\n    className: \"form-input-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Already have an account? Login \", React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"here\")))));\n}\n\nexport default RegistrationView;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useEffect","useState","RegistrationView","fName","lName","email","password","confirmPassword","inputValues","setInputValue","validation","setValidation","handleChange","event","target","name","value","checkValidation","errors","trim","emailCond","match","cond1","cond2","cond3","length","Password","handleSubmit","e","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction RegistrationView() {\n  const [inputValues, setInputValue] = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const [validation, setValidation] = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  //handle submit updates\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setInputValue({ ...inputValues, [name]: value });\n  }\n\n  const checkValidation = () => {\n    let errors = validation;\n\n    //first Name validation\n    if (!inputValues.fName.trim()) {\n      errors.fName = \"First name is required\";\n    } else {\n      errors.fName = \"\";\n    }\n    //last Name validation\n    if (!inputValues.lName.trim()) {\n      errors.lName = \"Last name is required\";\n    } else {\n      errors.lName = \"\";\n    }\n\n    // email validation\n    const emailCond =\n      \"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*$/\";\n    if (!inputValues.email.trim()) {\n      errors.email = \"Email is required\";\n    } else if (!inputValues.email.match(emailCond)) {\n      errors.email = \"Please ingress a valid email address\";\n    } else {\n      errors.email = \"\";\n    }\n\n    //password validation\n    const cond1 = \"/^(?=.*[a-z]).{6,20}$/\";\n    const cond2 = \"/^(?=.*[A-Z]).{6,20}$/\";\n    const cond3 = \"/^(?=.*[0-9]).{6,20}$/\";\n    const password = inputValues.password;\n    if (!password) {\n      errors.password = \"password is required\";\n    } else if (password.length < 6) {\n      errors.password = \"Password must be longer than 6 characters\";\n    } else if (password.length >= 20) {\n      errors.password = \"Password must shorter than 20 characters\";\n    } else if (!password.match(cond1)) {\n      errors.password = \"Password must contain at least one lowercase\";\n    } else if (!password.match(cond2)) {\n      errors.password = \"Password must contain at least one capital letter\";\n    } else if (!password.match(cond3)) {\n      errors.password = \"Password must contain at least a number\";\n    } else {\n      errors.password = \"\";\n    }\n\n    //matchPassword validation\n    if (!inputValues.confirmPassword) {\n      errors.confirmPassword = \"Password confirmation is required\";\n    } else if (inputValues.confirmPassword !== inputValues.Password) {\n      errors.confirmPassword = \"Password does not match confirmation password\";\n    } else {\n      errors.password = \"\";\n    }\n\n    setValidation(errors);\n  };\n\n  useEffect(() => {\n    checkValidation();\n  }, [inputValues]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"sign-up-form\">\n        <form\n          id=\"registrationForm\"\n          action=\"/\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"form-control\">\n            <input\n              placeholder=\"First Name\"\n              type=\"string\"\n              name=\"fName\"\n              id=\"fName\"\n              className=\"input-field\"\n              onChange={(e) => handleChange(e)}\n              value={inputValues.fName}\n            />\n            {validation.fName && <p>{validation.fName}</p>}\n            {validation.fName && console.log(validation)}\n          </div>\n          \n          <div className=\"form-control\">\n            <input\n              placeholder=\"Last Name\"\n              type=\"string\"\n              id=\"lName\"\n              name=\"lName\"\n              className=\"input-field\"\n              onChange={(e) => handleChange(e)}\n              value={inputValues.lName}\n            />\n            {validation.lName && <p>{validation.lName}</p>}\n          </div>\n          <div className=\"form-control\">\n            <input\n              placeholder=\"email\"\n              type=\"email\"\n              name=\"email\"\n              className=\"input-field\"\n              onChange={(e) => handleChange(e)}\n              value={inputValues.email}\n            />\n          </div>\n          {validation.email && <p>{validation.email}</p>}\n\n          <div className=\"form-control\">\n            <input\n              placeholder=\"password\"\n              type=\"password\"\n              name=\"password\"\n              className=\"input-field\"\n              onChange={(e) => handleChange(e)}\n              value={inputValues.password}\n              required\n            />\n            {validation.password && <p>{validation.password}</p>}\n          </div>\n          <div className=\"form-control\">\n            <input\n              placeholder=\"confirm password\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              className=\"input-field\"\n              onChange={(e) => handleChange(e)}\n              value={inputValues.confirmPassword}\n              required\n            />\n          </div>\n          <button type=\"submit\" id=\"submit-button\">\n            submit\n          </button>\n          <span className=\"form-input-login\">\n            Already have an account? Login <a href=\"#\">here</a>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default RegistrationView;\n"]},"metadata":{},"sourceType":"module"}