{"ast":null,"code":"import _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddUser = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1]; // destructure user and token from localstorage\n\n\n  const _isAuthenticated = isAuthenticated(),\n        user = _isAuthenticated.user,\n        token = _isAuthenticated.token;\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isValid = _useState8[0],\n        setIsValid = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setMessage = _useState10[1];\n\n  const validate = event => {\n    const name = event.target.value;\n\n    if (name.length < 3) {\n      setIsValid(true);\n      setMessage('Minimum is three');\n    } else if (name < 5) {} else {\n      setIsValid(false);\n      setMessage('All ok');\n    }\n  };\n\n  const clickSubmit = e => {\n    validate();\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(false); // make request to api to create category\n\n    createCategory(user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryFom = () => React.createElement(\"form\", {\n    onSubmit: clickSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted+\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btn btn-outline-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Create Category\"));\n\n  const showSuccess = () => {\n    if (success) {\n      return React.createElement(\"h3\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, name, \" is created\");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return React.createElement(\"h3\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Category should be unique\");\n    }\n  };\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Back to Dashboard\"));\n\n  return React.createElement(Layout, {\n    title: \"Add a new category\",\n    description: \"G'day \".concat(user.name, \", ready to add a new category?\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, showSuccess(), showError(), newCategoryFom(), goBack())));\n};\n\nexport default AddUser;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","AddUser","name","setName","error","setError","success","setSuccess","user","token","isValid","setIsValid","message","setMessage","validate","event","target","value","length","clickSubmit","e","preventDefault","_id","then","data","newCategoryFom","handleChange","showSuccess","showError","goBack"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEXM,IAFW;AAAA,QAELC,OAFK;;AAAA,qBAGQP,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,QAGXQ,KAHW;AAAA,QAGJC,QAHI;;AAAA,qBAIYT,QAAQ,CAAC,KAAD,CAJpB;AAAA;AAAA,QAIXU,OAJW;AAAA,QAIFC,UAJE,kBAMlB;;;AANkB,2BAOMT,eAAe,EAPrB;AAAA,QAOVU,IAPU,oBAOVA,IAPU;AAAA,QAOJC,KAPI,oBAOJA,KAPI;;AAAA,qBASYb,QAAQ,CAAC,KAAD,CATpB;AAAA;AAAA,QASXc,OATW;AAAA,QASFC,UATE;;AAAA,qBAUYf,QAAQ,CAAC,EAAD,CAVpB;AAAA;AAAA,QAUXgB,OAVW;AAAA,QAUFC,UAVE;;AAYlB,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAMb,IAAI,GAAGa,KAAK,CAACC,MAAN,CAAaC,KAA1B;;AACA,QAAIf,IAAI,CAACgB,MAAL,GAAc,CAAlB,EAAqB;AACnBP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,kBAAD,CAAV;AACD,KAHD,MAGM,IAAGX,IAAI,GAAG,CAAV,EAAY,CAEjB,CAFK,MAEC;AACLS,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,QAAD,CAAV;AACD;AACF,GAXD;;AAaA,QAAMM,WAAW,GAAGC,CAAC,IAAI;AACrBN,IAAAA,QAAQ;AACRM,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV,CAJqB,CAKrB;;AACAP,IAAAA,cAAc,CAACQ,IAAI,CAACc,GAAN,EAAWb,KAAX,EAAkB;AAAEP,MAAAA;AAAF,KAAlB,CAAd,CAA0CqB,IAA1C,CAA+CC,IAAI,IAAI;AACnD,UAAIA,IAAI,CAACpB,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACmB,IAAI,CAACpB,KAAN,CAAR;AACH,OAFD,MAEO;AACHC,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KAPD;AAQH,GAdD;;AAgBA,QAAMkB,cAAc,GAAG,MACnB;AAAM,IAAA,QAAQ,EAAEN,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,QAAQ,EAAEO,YAHd;AAII,IAAA,KAAK,EAAExB,IAJX;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAYI;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZJ,CADJ;;AAiBA,QAAMyB,WAAW,GAAG,MAAM;AACtB,QAAIrB,OAAJ,EAAa;AACT,aAAO;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BJ,IAA9B,gBAAP;AACH;AACJ,GAJD;;AAMA,QAAM0B,SAAS,GAAG,MAAM;AACpB,QAAIxB,KAAJ,EAAW;AACP,aAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AACH;AACJ,GAJD;;AAMA,QAAMyB,MAAM,GAAG,MACX;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,kBAAT;AAA4B,IAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;;AAQA,SACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,oBADV;AAEI,IAAA,WAAW,kBAAWrB,IAAI,CAACN,IAAhB,mCAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKyB,WAAW,EADhB,EAEKC,SAAS,EAFd,EAGKH,cAAc,EAHnB,EAIKI,MAAM,EAJX,CADJ,CAJJ,CADJ;AAeH,CA7FD;;AA+FA,eAAe5B,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddUser = () => {\n    \n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const { user, token } = isAuthenticated();\n\n    const [isValid, setIsValid] = useState(false);\n    const [message, setMessage] = useState('');\n\n    const validate = (event) => {\n      const name = event.target.value;\n      if (name.length < 3) {\n        setIsValid(true);\n        setMessage('Minimum is three');\n      }else if(name < 5){\n\n      } else {\n        setIsValid(false);\n        setMessage('All ok');\n      }\n    };\n\n    const clickSubmit = e => {\n        validate();\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        // make request to api to create category\n        createCategory(user._id, token, { name }).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryFom = () => (\n        <form onSubmit={clickSubmit}>\n            <div className=\"form-group\">\n                <label className=\"text-muted+\">Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={handleChange}\n                    value={name}\n                    autoFocus\n                    required\n                />\n            </div>\n            <button className=\"btn btn-outline-primary\">Create Category</button>\n        </form>\n    );\n\n    const showSuccess = () => {\n        if (success) {\n            return <h3 className=\"text-success\">{name} is created</h3>;\n        }\n    };\n\n    const showError = () => {\n        if (error) {\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\n        }\n    };\n\n    const goBack = () => (\n        <div className=\"mt-5\">\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\n                Back to Dashboard\n            </Link>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Add a new category\"\n            description={`G'day ${user.name}, ready to add a new category?`}\n        >\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showSuccess()}\n                    {showError()}\n                    {newCategoryFom()}\n                    {goBack()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}