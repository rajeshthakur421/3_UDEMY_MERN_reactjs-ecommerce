{"ast":null,"code":"import _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddUser = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1]; // destructure user and token from localstorage\n\n\n  const _isAuthenticated = isAuthenticated(),\n        user = _isAuthenticated.user,\n        token = _isAuthenticated.token;\n\n  const handleChange = e => {\n    setError(\"\");\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(false); // make request to api to create category\n\n    createCategory(user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryFom = () => React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: firstNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" First Name \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: firstNameValue,\n    onChange: firstNameChangeHandler,\n    onBlur: firstNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \" \", firstNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" Please enter a first name. \"), \" \"), \" \", React.createElement(\"div\", {\n    className: lastNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Last Name \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: lastNameValue,\n    onChange: lastNameChangeHandler,\n    onBlur: lastNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \", lastNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Please enter a last name. \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n    className: emailClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" E - Mail Address \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: emailValue,\n    onChange: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), \" \", emailHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \" Please enter a valid email address. \"), \" \"), \" \", React.createElement(\"div\", {\n    className: \"form-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !formIsValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" Submit \"), \" \"), \" \");\n\n  const showSuccess = () => {\n    if (success) {\n      return React.createElement(\"h3\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" \", name, \"is created \");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return React.createElement(\"h3\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" Category should be unique \");\n    }\n  };\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Back to Dashboard \"), \" \");\n\n  return React.createElement(Layout, {\n    title: \"Add a new category\",\n    description: \"G'day \".concat(user.name, \", ready to add a new category?\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \" \", showSuccess(), \" \", showError(), \" \", newCategoryFom(), \" \", goBack(), \" \"), \" \"), \" \");\n};\n\nexport default AddUser;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","AddUser","name","setName","error","setError","success","setSuccess","user","token","handleChange","e","target","value","clickSubmit","preventDefault","_id","then","data","newCategoryFom","submitHandler","firstNameClasses","firstNameValue","firstNameChangeHandler","firstNameBlurHandler","firstNameHasError","lastNameClasses","lastNameValue","lastNameChangeHandler","lastNameBlurHandler","lastNameHasError","emailClasses","emailValue","emailChangeHandler","emailBlurHandler","emailHasError","formIsValid","showSuccess","showError","goBack"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,QAEO,OAFP;AAGA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SACIC,eADJ,QAEO,SAFP;AAGA,SACIC,IADJ,QAEO,kBAFP;AAGA,SACIC,cADJ,QAEO,YAFP;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEXM,IAFW;AAAA,QAELC,OAFK;;AAAA,qBAGQP,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,QAGXQ,KAHW;AAAA,QAGJC,QAHI;;AAAA,qBAIYT,QAAQ,CAAC,KAAD,CAJpB;AAAA;AAAA,QAIXU,OAJW;AAAA,QAIFC,UAJE,kBAMlB;;;AANkB,2BAUdT,eAAe,EAVD;AAAA,QAQdU,IARc,oBAQdA,IARc;AAAA,QASdC,KATc,oBASdA,KATc;;AAYlB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV,CAHqB,CAIrB;;AACAP,IAAAA,cAAc,CAACQ,IAAI,CAACQ,GAAN,EAAWP,KAAX,EAAkB;AAC5BP,MAAAA;AAD4B,KAAlB,CAAd,CAEGe,IAFH,CAEQC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACd,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACa,IAAI,CAACd,KAAN,CAAR;AACH,OAFD,MAEO;AACHC,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,KATD;AAUH,GAfD;;AAiBA,QAAMY,cAAc,GAAG,MAAO;AACb,IAAA,QAAQ,EACjBC,aAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAI1B;AACY,IAAA,SAAS,EAAC,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACQ,IAAA,SAAS,EACTC,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACM,IAAA,OAAO,EAAC,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,OAKgD;AAC9B,IAAA,IAAI,EAAC,MADyB;AAEpC,IAAA,EAAE,EAAC,MAFiC;AAGpC,IAAA,KAAK,EACDC,cAJgC;AAMpC,IAAA,QAAQ,EACJC,sBAPgC;AASpC,IAAA,MAAM,EACFC,oBAVgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALhD,OAkBYC,iBAAiB,IAAI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAlBjC,MAFJ,OAqBsB;AACF,IAAA,SAAS,EACDC,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACF,IAAA,OAAO,EAAC,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,OAKqC;AAE3B,IAAA,IAAI,EAAC,MAFsB;AAG3B,IAAA,EAAE,EAAC,MAHwB;AAI3B,IAAA,KAAK,EACDC,aALuB;AAO3B,IAAA,QAAQ,EACJC,qBARuB;AAU3B,IAAA,MAAM,EACFC,mBAXuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALrC,OAmBUC,gBAAgB,IAAI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAnB9B,MArBtB,MAJ0B,OA8CA;AACF,IAAA,SAAS,EACWC,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIc;AACd,IAAA,OAAO,EAAC,MADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJd,OAK4C;AAEtB,IAAA,IAAI,EAAC,MAFiB;AAGtB,IAAA,EAAE,EAAC,MAHmB;AAItB,IAAA,KAAK,EACDC,UALkB;AAOtB,IAAA,QAAQ,EACJC,kBARkB;AAUtB,IAAA,MAAM,EACFC,gBAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL5C,OAmBsBC,aAAa,IAAI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAnBvC,MA9CA,OAkEI;AACF,IAAA,SAAS,EAAC,cADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAE0B;AACzB,IAAA,QAAQ,EACyB,CAACC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF1B,MAlEJ,MAA9B;;AA4EoB,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAI/B,OAAJ,EAAa;AACT,aAAO;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACiCJ,IADjC,gBAAP;AAIH;AACJ,GAPD;;AASA,QAAMoC,SAAS,GAAG,MAAM;AACpB,QAAIlC,KAAJ,EAAW;AACP,aAAO;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACH;AACJ,GAJD;;AAMA,QAAMmC,MAAM,GAAG,MAAQ;AACf,IAAA,SAAS,EAAC,MADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEiC,oBACpD,IADoD;AAC/C,IAAA,EAAE,EAAC,kBAD4C;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFjC,MAAvB;;AAU4D,SAAS,oBACjE,MADiE;AAC1D,IAAA,KAAK,EAAC,oBADoD;AAEL,IAAA,WAAW,kBACE/B,IAAI,CAACN,IADP,mCAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKL;AACxD,IAAA,SAAS,EAAC,KAD8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAC5D,IAAA,SAAS,EAAC,sBADkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEQmC,WAAW,EAFnB,OAIQC,SAAS,EAJjB,OAMQnB,cAAc,EANtB,OAQQoB,MAAM,EARd,MAFJ,MALK,MAAT;AAqB/D,CA5JrB;;AA8JgG,eAAetC,OAAf","sourcesContent":["import React, {\n    useState\n} from \"react\";\nimport Layout from \"../core/Layout\";\nimport {\n    isAuthenticated\n} from \"../auth\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {\n    createCategory\n} from \"./apiAdmin\";\n\nconst AddUser = () => {\n\n    const [name, setName] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    // destructure user and token from localstorage\n    const {\n        user,\n        token\n    } = isAuthenticated();\n\n    const handleChange = e => {\n        setError(\"\");\n        setName(e.target.value);\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        setError(\"\");\n        setSuccess(false);\n        // make request to api to create category\n        createCategory(user._id, token, {\n            name\n        }).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setError(\"\");\n                setSuccess(true);\n            }\n        });\n    };\n\n    const newCategoryFom = () => (<\n                form onSubmit={\n            submitHandler\n        } >\n        <\n                div className='control-group' >\n            <\n                div className={\n                    firstNameClasses\n                } >\n                <\n                label htmlFor='name' > First Name < /label> <\n                        input type='text'\n                        id='name'\n                        value={\n                            firstNameValue\n                        }\n                        onChange={\n                            firstNameChangeHandler\n                        }\n                        onBlur={\n                            firstNameBlurHandler\n                        }\n                    /> {\n                        firstNameHasError && < p className=\"error-text\" > Please enter a first name. < /p>} <\n                        /div> <\n                        div className={\n                                    lastNameClasses\n                                } >\n                                <\n                        label htmlFor='name' > Last Name < /label> <\n                                        input\n                                        type='text'\n                                        id='name'\n                                        value={\n                                            lastNameValue\n                                        }\n                                        onChange={\n                                            lastNameChangeHandler\n                                        }\n                                        onBlur={\n                                            lastNameBlurHandler\n                                        }\n                                    /> {\n                                        lastNameHasError && < p className=\"error-text\" > Please enter a last name. < /p>} <\n                            /div> <\n                            /div> <\n                            div className={\n                                                    emailClasses\n                                                } >\n                                                <\n                            label htmlFor='name' > E - Mail Address < /label> <\n                                                        input\n                                                        type='text'\n                                                        id='name'\n                                                        value={\n                                                            emailValue\n                                                        }\n                                                        onChange={\n                                                            emailChangeHandler\n                                                        }\n                                                        onBlur={\n                                                            emailBlurHandler\n                                                        }\n                                                    /> {\n                                                        emailHasError && < p className=\"error-text\" > Please enter a valid email address. < /p>} <\n                                /div> <\n                                div className='form-actions' >\n                                                                <\n                                button disabled={\n                                                                        !formIsValid\n                                                                    } > Submit < /button> <\n                                /div> <\n                                /form>\n                                                                    );\n\n                        const showSuccess = () => {\n                            if (success) {\n                                return <h3 className=\"text-success\" > {\n                                                                        name\n                                                                    }\n                                                                        is created < /h3>;\n                            }\n                        };\n\n                        const showError = () => {\n                            if (error) {\n                                return <h3 className=\"text-danger\" > Category should be unique < /h3>;\n                            }\n                        };\n\n                        const goBack = () => ( <\n                            div className=\"mt-5\" >\n                                                                                <\n                            Link to=\"/admin/dashboard\"\n                                                                                    className=\"text-warning\" >\n                                                                                    Back to Dashboard <\n                            /Link> <\n                            /div>\n                                                                                    );\n\n                                                                                    return ( <\n                            Layout title=\"Add a new category\"\n                                                                                        description={\n                                                                                            `G'day ${user.name}, ready to add a new category?`\n                                                                                        } >\n                                                                                        <\n                            div className=\"row\" >\n                                                                                            <\n                            div className=\"col-md-8 offset-md-2\" > {\n                                                                                                    showSuccess()\n                                                                                                } {\n                                                                                                    showError()\n                                                                                                } {\n                                                                                                    newCategoryFom()\n                                                                                                } {\n                                                                                                    goBack()\n                                                                                                } <\n                            /div> <\n                            /div> <\n                            /Layout>\n                                                                                                );\n                    };\n\n                                                                                                export default AddUser;"]},"metadata":{},"sourceType":"module"}