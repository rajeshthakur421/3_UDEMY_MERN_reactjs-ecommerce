{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\nimport useInput from \"./useInput\";\n\nconst AddUser = props => {\n  const isNotEmpty = value => value.trim() !== '';\n\n  const isEmail = value => value.includes('@');\n\n  const _useInput = useInput(isNotEmpty),\n        firstNameValue = _useInput.value,\n        firstNameIsValid = _useInput.isValid,\n        firstNameHasError = _useInput.hasError,\n        firstNameChangeHandler = _useInput.valueChangeHandler,\n        firstNameBlurHandler = _useInput.inputBlurHandler,\n        resetFirstName = _useInput.reset;\n\n  const _useInput2 = useInput(isNotEmpty),\n        lastNameValue = _useInput2.value,\n        lastNameIsValid = _useInput2.isValid,\n        lastNameHasError = _useInput2.hasError,\n        lastNameChangeHandler = _useInput2.valueChangeHandler,\n        lastNameBlurHandler = _useInput2.inputBlurHandler,\n        resetLastName = _useInput2.reset;\n\n  const _useInput3 = useInput(isEmail),\n        emailValue = _useInput3.value,\n        emailIsValid = _useInput3.isValid,\n        emailHasError = _useInput3.hasError,\n        emailChangeHandler = _useInput3.valueChangeHandler,\n        emailBlurHandler = _useInput3.inputBlurHandler,\n        resetEmail = _useInput3.reset;\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log('Submitted!');\n    console.log(firstNameValue, lastNameValue, emailValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n\n  const newCategoryFom = () => React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: firstNameValue,\n    onChange: firstNameChangeHandler,\n    onBlur: firstNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), firstNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Please enter a first name.\")), React.createElement(\"div\", {\n    className: \"form-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !formIsValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Submit\")));\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Back to Dashboard\"));\n\n  return React.createElement(Layout, {\n    title: \"Add a new category\",\n    description: \"ready to add a new category?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, newCategoryFom(), goBack())));\n};\n\nexport default AddUser;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","useInput","AddUser","props","isNotEmpty","value","trim","isEmail","includes","firstNameValue","firstNameIsValid","isValid","firstNameHasError","hasError","firstNameChangeHandler","valueChangeHandler","firstNameBlurHandler","inputBlurHandler","resetFirstName","reset","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","submitHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses","newCategoryFom","goBack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\nimport useInput from \"./useInput\";\n\nconst AddUser = (props) => {\n\n    const isNotEmpty = (value) => value.trim() !== '';\n    const isEmail = (value) => value.includes('@');\n\n    const {\n        value: firstNameValue,\n        isValid: firstNameIsValid,\n        hasError: firstNameHasError,\n        valueChangeHandler: firstNameChangeHandler,\n        inputBlurHandler: firstNameBlurHandler,\n        reset: resetFirstName,\n      } = useInput(isNotEmpty);\n      const {\n        value: lastNameValue,\n        isValid: lastNameIsValid,\n        hasError: lastNameHasError,\n        valueChangeHandler: lastNameChangeHandler,\n        inputBlurHandler: lastNameBlurHandler,\n        reset: resetLastName,\n      } = useInput(isNotEmpty);\n      const {\n        value: emailValue,\n        isValid: emailIsValid,\n        hasError: emailHasError,\n        valueChangeHandler: emailChangeHandler,\n        inputBlurHandler: emailBlurHandler,\n        reset: resetEmail,\n      } = useInput(isEmail);\n    \n      let formIsValid = false;\n    \n      if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n        formIsValid = true;\n      }\n    \n      const submitHandler = event => {\n        event.preventDefault();\n    \n        if (!formIsValid) {\n          return;\n        }\n    \n        console.log('Submitted!');\n        console.log(firstNameValue, lastNameValue, emailValue);\n    \n        resetFirstName();\n        resetLastName();\n        resetEmail();\n      };\n    \n      const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n      const lastNameClasses = lastNameHasError ? 'form-control invalid' : 'form-control';\n      const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n    \n\n  \n  const newCategoryFom = () => (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">Please enter a first name.</p>\n          )}\n      </div>\n      \n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n\n \n\n  const goBack = () => (\n    <div className=\"mt-5\">\n      <Link to=\"/admin/dashboard\" className=\"text-warning\">\n        Back to Dashboard\n      </Link>\n    </div>\n  );\n\n  return (\n    <Layout\n      title=\"Add a new category\"\n      description={`ready to add a new category?`}\n    >\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2\">\n          {newCategoryFom()}\n          {goBack()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}