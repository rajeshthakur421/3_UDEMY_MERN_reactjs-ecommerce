{"ast":null,"code":"export const addItem = function () {\n  let item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : f => f;\n  let cart = [];\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n    cart.push({\n      ...item,\n      count: 1\n    });\n\n    // remove duplicates\n    // build an Array from new Set and turn it back into array using Array.from\n    // so that later we can re-map it\n    // new set will only allow unique values in it\n    // so pass the ids of each object/product\n    // If the loop tries to add the same value again, it'll get ignored\n    // ...with the array of ids we got on when first map() was used\n    // run map() on it again and return the actual product from the cart\n\n    cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n      return cart.find(p => p._id === id);\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n    next();\n  }\n};\nexport const itemTotal = () => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      return JSON.parse(localStorage.getItem('cart')).length;\n    }\n  }\n  return 0;\n};\nexport const getCart = () => {\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      return JSON.parse(localStorage.getItem('cart'));\n    }\n  }\n  return [];\n};\nexport const updateItem = (productId, count) => {\n  let cart = [];\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n    cart.map((product, i) => {\n      if (product._id === productId) {\n        cart[i].count = count;\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n};\nexport const removeItem = productId => {\n  let cart = [];\n  if (typeof window !== 'undefined') {\n    if (localStorage.getItem('cart')) {\n      cart = JSON.parse(localStorage.getItem('cart'));\n    }\n    cart.map((product, i) => {\n      if (product._id === productId) {\n        cart.splice(i, 1);\n      }\n    });\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n  return cart;\n};\nexport const emptyCart = next => {\n  if (typeof window !== 'undefined') {\n    localStorage.removeItem('cart');\n    next();\n  }\n};","map":{"version":3,"names":["addItem","item","arguments","length","undefined","count","next","f","cart","window","localStorage","getItem","JSON","parse","push","Array","from","Set","map","p","_id","id","find","setItem","stringify","itemTotal","getCart","updateItem","productId","product","i","removeItem","splice","emptyCart"],"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/core/cartHelpers.js"],"sourcesContent":["export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}