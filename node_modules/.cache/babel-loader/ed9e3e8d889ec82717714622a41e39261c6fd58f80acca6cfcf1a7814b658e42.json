{"ast":null,"code":"import { API } from '../config';\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteCategory = (categoryId, userId, token) => {\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateCategory = (categoryId, userId, token, category) => {\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\n    method: 'PUT',\n    headers: {\n      // content type?\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCategory = categoryId => {\n  return fetch(`${API}/category/${categoryId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getMenu = () => {\n  return fetch(`${API}/menu`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/order/list/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n  return fetch(`${API}/products?limit=undefined`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","deleteCategory","categoryId","updateCategory","createProduct","product","getCategory","getCategories","getMenu","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/apiAdmin.js"],"sourcesContent":["import { API } from '../config';\n\nexport const createCategory = (userId, token, category) => {\n    return fetch(`${API}/category/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\nexport const deleteCategory = (categoryId, userId, token) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateCategory = (categoryId, userId, token, category) => {\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            // content type?\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createProduct = (userId, token, product) => {\n    return fetch(`${API}/product/create/${userId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const getCategory = categoryId => {\n    return fetch(`${API}/category/${categoryId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getMenu = () => {\n    return fetch(`${API}/menu`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const listOrders = (userId, token) => {\n    return fetch(`${API}/order/list/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = () => {\n    return fetch(`${API}/products?limit=undefined`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateProduct = (productId, userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}