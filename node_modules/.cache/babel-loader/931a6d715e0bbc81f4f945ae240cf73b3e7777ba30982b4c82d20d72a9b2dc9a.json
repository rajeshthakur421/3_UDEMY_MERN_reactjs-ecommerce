{"ast":null,"code":"import { API } from \"../config\";\nimport queryString from \"query-string\";\nexport const getProducts = sortBy => {\n  return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getFilteredProducts = function (skip, limit) {\n  let filters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  return fetch(`${API}/products/by/search`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const list = params => {\n  const query = queryString.stringify(params);\n  console.log(\"query\", query);\n  return fetch(`${API}/products/search?${query}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const read = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listRelated = productId => {\n  return fetch(`${API}/products/related/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getBraintreeClientToken = (userId, token) => {\n  return fetch(`${API}/braintree/getToken/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (userId, token, paymentData) => {\n  return fetch(`${API}/braintree/payment/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentData)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createOrder = (userId, token, createOrderData) => {\n  return fetch(`${API}/order/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      order: createOrderData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","queryString","getProducts","sortBy","fetch","method","then","response","json","catch","err","console","log","getCategories","getFilteredProducts","skip","limit","filters","arguments","length","undefined","data","headers","Accept","body","JSON","stringify","list","params","query","read","productId","listRelated","getBraintreeClientToken","userId","token","Authorization","processPayment","paymentData","createOrder","createOrderData","order"],"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/core/apiCore.js"],"sourcesContent":["import { API } from \"../config\";\nimport queryString from \"query-string\";\n\nexport const getProducts = sortBy => {\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getCategories = () => {\n    return fetch(`${API}/categories`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/products/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(\"query\", query);\n    return fetch(`${API}/products/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const read = productId => {\n    return fetch(`${API}/product/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const listRelated = productId => {\n    return fetch(`${API}/products/related/${productId}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getBraintreeClientToken = (userId, token) => {\n    return fetch(`${API}/braintree/getToken/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const processPayment = (userId, token, paymentData) => {\n    return fetch(`${API}/braintree/payment/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(paymentData)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const createOrder = (userId, token, createOrderData) => {\n    return fetch(`${API}/order/create/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ order: createOrderData })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}