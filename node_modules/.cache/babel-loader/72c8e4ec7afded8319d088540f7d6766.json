{"ast":null,"code":"import { API } from \"../config\";\nexport const read = (userId, token) => {\n  return fetch(\"\".concat(API, \"/user/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (userId, token, user) => {\n  return fetch(\"\".concat(API, \"/user/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateUser = (user, next) => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const getPurchaseHistory = (userId, token) => {\n  return fetch(\"\".concat(API, \"/orders/by/user/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/rudransh/public_html/react-mern-stack/src/user/apiUser.js"],"names":["API","read","userId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","update","user","body","JSON","stringify","updateUser","next","window","localStorage","getItem","auth","parse","setItem","getPurchaseHistory"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,SAAOC,KAAK,WAAIJ,GAAJ,mBAAgBE,MAAhB,GAA0B;AAClCG,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYL,KAAZ;AAHR;AAFyB,GAA1B,CAAL,CAQFM,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAG,CAACd,MAAD,EAASC,KAAT,EAAgBc,IAAhB,KAAyB;AAC3C,SAAOb,KAAK,WAAIJ,GAAJ,mBAAgBE,MAAhB,GAA0B;AAClCG,IAAAA,MAAM,EAAE,KAD0B;AAElCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYL,KAAZ;AAHR,KAFyB;AAOlCe,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAP4B,GAA1B,CAAL,CASFR,IATE,CASGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMQ,UAAU,GAAG,CAACJ,IAAD,EAAOK,IAAP,KAAgB;AACtC,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC7B,UAAIC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX;AACAC,MAAAA,IAAI,CAACT,IAAL,GAAYA,IAAZ;AACAO,MAAAA,YAAY,CAACI,OAAb,CAAqB,KAArB,EAA4BT,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA5B;AACAJ,MAAAA,IAAI;AACP;AACJ;AACJ,CATM;AAWP,OAAO,MAAMO,kBAAkB,GAAG,CAAC3B,MAAD,EAASC,KAAT,KAAmB;AACjD,SAAOC,KAAK,WAAIJ,GAAJ,6BAA0BE,MAA1B,GAAoC;AAC5CG,IAAAA,MAAM,EAAE,KADoC;AAE5CC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYL,KAAZ;AAHR;AAFmC,GAApC,CAAL,CAQFM,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM","sourcesContent":["import { API } from \"../config\";\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}