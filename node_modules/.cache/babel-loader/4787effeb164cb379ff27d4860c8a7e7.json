{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/user/Register.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport TextField from './TextField';\n\nconst Register = () => {\n  const validate = Yup.object({\n    firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n    lastName: Yup.string().max(20, 'Must be 20 character or less').required('Required'),\n    email: Yup.string().email('Email is envalid').required('Email is required'),\n    password: Yup.string().min(6, 'Password must be at lest 6 char').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'password must be same').required('Confrim password is required')\n  });\n  return React.createElement(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/user/Register.js"],"names":["React","Formik","Form","TextField","Register","validate","Yup","object","firstName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","values","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAuB,aAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,QAAQ,GAAGC,GAAG,CAACC,MAAJ,CAAW;AACxBC,IAAAA,SAAS,EAAGF,GAAG,CAACG,MAAJ,GACPC,GADO,CACH,EADG,EACA,+BADA,EAEPC,QAFO,CAEE,UAFF,CADY;AAIxBC,IAAAA,QAAQ,EAAEN,GAAG,CAACG,MAAJ,GACLC,GADK,CACD,EADC,EACE,8BADF,EAELC,QAFK,CAEI,UAFJ,CAJc;AAOxBE,IAAAA,KAAK,EAAGP,GAAG,CAACG,MAAJ,GACHI,KADG,CACG,kBADH,EAEHF,QAFG,CAEM,mBAFN,CAPgB;AAUxBG,IAAAA,QAAQ,EAAGR,GAAG,CAACG,MAAJ,GACNM,GADM,CACF,CADE,EACC,iCADD,EAENJ,QAFM,CAEG,sBAFH,CAVa;AAaxBK,IAAAA,eAAe,EAAGV,GAAG,CAACG,MAAJ,GACbQ,KADa,CACP,CAACX,GAAG,CAACY,GAAJ,CAAQ,UAAR,CAAD,EAAqB,IAArB,CADO,EACoB,uBADpB,EAEbP,QAFa,CAEJ,8BAFI;AAbM,GAAX,CAAjB;AAmBA,SACI,oBAAC,MAAD;AACI,IAAA,aAAa,EACT;AACIH,MAAAA,SAAS,EAAG,EADhB;AAEII,MAAAA,QAAQ,EAAG,EAFf;AAGIC,MAAAA,KAAK,EAAG,EAHZ;AAIIC,MAAAA,QAAQ,EAAG,EAJf;AAKIE,MAAAA,eAAe,EAAG;AALtB,KAFR;AAUI,IAAA,gBAAgB,EAAIX,QAVxB;AAWI,IAAA,QAAQ,EAAIc,MAAM,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAqBH,CAzCD;;AA0CA,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport TextField  from './TextField';\n\nconst Register = () => {\n    const validate = Yup.object({\n        firstName : Yup.string()\n            .max(15,'Must be 15 characters or less')\n            .required('Required'),\n        lastName: Yup.string()\n            .max(20,'Must be 20 character or less')\n            .required('Required'),\n        email : Yup.string()\n            .email('Email is envalid')\n            .required('Email is required'),\n        password : Yup.string()\n            .min(6, 'Password must be at lest 6 char')\n            .required('Password is required'),\n        confirmPassword : Yup.string()\n            .oneOf([Yup.ref('password'),null],'password must be same')\n            .required('Confrim password is required'),    \n\n\n    })\n    return (\n        <Formik\n            initialValues={\n                {\n                    firstName : '',\n                    lastName : '',\n                    email : '',\n                    password : '',\n                    confirmPassword : ''\n                }                \n            }\n            validationSchema = {validate}\n            onSubmit = {values => {\n                console.log(values);\n            }}\n        >\n\n        {}\n\n        </Formik>\n    );\n};\nexport default Register;"]},"metadata":{},"sourceType":"module"}