{"ast":null,"code":"import _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createCategory } from \"./apiAdmin\";\n\nconst AddUser = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        setSuccess = _useState6[1]; // destructure user and token from localstorage\n\n\n  const _isAuthenticated = isAuthenticated(),\n        user = _isAuthenticated.user,\n        token = _isAuthenticated.token;\n\n  const handleChange = e => {\n    setError(\"\");\n    setName(e.target.value);\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(false); // make request to api to create category\n\n    createCategory(user._id, token, {\n      name\n    }).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n      }\n    });\n  };\n\n  const newCategoryFom = () => React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"control-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: firstNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" First Name \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: firstNameValue,\n    onChange: firstNameChangeHandler,\n    onBlur: firstNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \" \", firstNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" Please enter a first name. \"), \" \"), \" \", React.createElement(\"div\", {\n    className: lastNameClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Last Name \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: lastNameValue,\n    onChange: lastNameChangeHandler,\n    onBlur: lastNameBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \", lastNameHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Please enter a last name. \"), \" \"), \" \"), \" \", React.createElement(\"div\", {\n    className: emailClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" E - Mail Address \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    value: emailValue,\n    onChange: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), \" \", emailHasError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \" Please enter a valid email address. \"), \" \"), \" \", React.createElement(\"div\", {\n    className: \"form-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !formIsValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \" Submit \"), \" \"), \" \");\n\n  const showSuccess = () => {\n    if (success) {\n      return React.createElement(\"h3\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" \", name, \"is created \");\n    }\n  };\n\n  const showError = () => {\n    if (error) {\n      return React.createElement(\"h3\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" Category should be unique \");\n    }\n  };\n\n  const goBack = () => React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/admin/dashboard\",\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Back to Dashboard \"), \" \");\n\n  return React.createElement(Layout, {\n    title: \"Add a new category\",\n    description: \"G'day \".concat(user.name, \", ready to add a new category?\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \" \", showSuccess(), \" \", showError(), \" \", newCategoryFom(), \" \", goBack(), \" \"), \" \"), \" \");\n};\n\nexport default AddUser;","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","Layout","isAuthenticated","Link","createCategory","AddUser","name","setName","error","setError","success","setSuccess","user","token","handleChange","e","target","value","clickSubmit","preventDefault","_id","then","data","newCategoryFom","submitHandler","firstNameClasses","firstNameValue","firstNameChangeHandler","firstNameBlurHandler","firstNameHasError","lastNameClasses","lastNameValue","lastNameChangeHandler","lastNameBlurHandler","lastNameHasError","emailClasses","emailValue","emailChangeHandler","emailBlurHandler","emailHasError","formIsValid","showSuccess","showError","goBack"],"mappings":"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","sourcesContent":["import React, {\n    useState\n} from \"react\";\nimport Layout from \"../core/Layout\";\nimport {\n    isAuthenticated\n} from \"../auth\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {\n    createCategory\n} from \"./apiAdmin\";\n\nconst AddUser = () => {\n\n        const [name, setName] = useState(\"\");\n        const [error, setError] = useState(false);\n        const [success, setSuccess] = useState(false);\n\n        // destructure user and token from localstorage\n        const {\n            user,\n            token\n        } = isAuthenticated();\n\n        const handleChange = e => {\n            setError(\"\");\n            setName(e.target.value);\n        };\n\n        const clickSubmit = e => {\n            e.preventDefault();\n            setError(\"\");\n            setSuccess(false);\n            // make request to api to create category\n            createCategory(user._id, token, {\n                name\n            }).then(data => {\n                if (data.error) {\n                    setError(data.error);\n                } else {\n                    setError(\"\");\n                    setSuccess(true);\n                }\n            });\n        };\n\n        const newCategoryFom = () => ( <\n                form onSubmit = {\n                    submitHandler\n                } >\n                <\n                div className = 'control-group' >\n                <\n                div className = {\n                    firstNameClasses\n                } >\n                <\n                label htmlFor = 'name' > First Name < /label> <\n                input type = 'text'\n                id = 'name'\n                value = {\n                    firstNameValue\n                }\n                onChange = {\n                    firstNameChangeHandler\n                }\n                onBlur = {\n                    firstNameBlurHandler\n                }\n                /> {\n                    firstNameHasError && < p className = \"error-text\" > Please enter a first name. < /p>} <\n                        /div> <\n                        div className = {\n                            lastNameClasses\n                        } >\n                        <\n                        label htmlFor = 'name' > Last Name < /label> <\n                        input\n                    type = 'text'\n                    id = 'name'\n                    value = {\n                        lastNameValue\n                    }\n                    onChange = {\n                        lastNameChangeHandler\n                    }\n                    onBlur = {\n                        lastNameBlurHandler\n                    }\n                    /> {\n                        lastNameHasError && < p className = \"error-text\" > Please enter a last name. < /p>} <\n                            /div> <\n                            /div> <\n                            div className = {\n                                emailClasses\n                            } >\n                            <\n                            label htmlFor = 'name' > E - Mail Address < /label> <\n                            input\n                        type = 'text'\n                        id = 'name'\n                        value = {\n                            emailValue\n                        }\n                        onChange = {\n                            emailChangeHandler\n                        }\n                        onBlur = {\n                            emailBlurHandler\n                        }\n                        /> {\n                            emailHasError && < p className = \"error-text\" > Please enter a valid email address. < /p>} <\n                                /div> <\n                                div className = 'form-actions' >\n                                <\n                                button disabled = {\n                                    !formIsValid\n                                } > Submit < /button> <\n                                /div> <\n                                /form>\n                        );\n\n                        const showSuccess = () => {\n                            if (success) {\n                                return <h3 className = \"text-success\" > {\n                                    name\n                                }\n                                is created < /h3>;\n                            }\n                        };\n\n                        const showError = () => {\n                            if (error) {\n                                return <h3 className = \"text-danger\" > Category should be unique < /h3>;\n                            }\n                        };\n\n                        const goBack = () => ( <\n                            div className = \"mt-5\" >\n                            <\n                            Link to = \"/admin/dashboard\"\n                            className = \"text-warning\" >\n                            Back to Dashboard <\n                            /Link> <\n                            /div>\n                        );\n\n                        return ( <\n                            Layout title = \"Add a new category\"\n                            description = {\n                                `G'day ${user.name}, ready to add a new category?`\n                            } >\n                            <\n                            div className = \"row\" >\n                            <\n                            div className = \"col-md-8 offset-md-2\" > {\n                                showSuccess()\n                            } {\n                                showError()\n                            } {\n                                newCategoryFom()\n                            } {\n                                goBack()\n                            } <\n                            /div> <\n                            /div> <\n                            /Layout>\n                        );\n                    };\n\n                    export default AddUser;"]},"metadata":{},"sourceType":"module"}