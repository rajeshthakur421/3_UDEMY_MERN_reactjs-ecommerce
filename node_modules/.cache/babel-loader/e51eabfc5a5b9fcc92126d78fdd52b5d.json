{"ast":null,"code":"import _objectSpread from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Authcontext } from '../../../config/AppRoutes';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport SelectDropdown from '../../component/SelectDropdown';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst initialName = {\n  key: \"clientName\",\n  value: \"\",\n  error: false,\n  touched: false,\n  regex: /^[A-Za-z]/,\n  required: true\n};\n\nconst AddClients = ({\n  getClientdata,\n  afterclose\n}) => {\n  const auth = useContext(Authcontext); // console.log(\"Auth\", auth.state)\n\n  const _useState = useState(initialName),\n        _useState2 = _slicedToArray(_useState, 2),\n        clientName = _useState2[0],\n        setclientName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSubmitting = _useState4[0],\n        setIsSubmitting = _useState4[1];\n\n  const validate = obj => {\n    let error;\n\n    if (!obj.value) {\n      error = \"Required\";\n    } else if (!obj.regex.test(obj.value)) {\n      error = \"Invalid \".concat(obj.key);\n    }\n\n    return error;\n  };\n\n  const isError = obj => obj.error && obj.touched && obj.required;\n\n  const notify = () => toast.success(\"Changes Done!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true\n  });\n\n  const submitData = e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setclientName(_objectSpread({}, clientName, {\n      error: validate(clientName),\n      touched: true\n    }));\n\n    if (!clientName.error) {\n      const empData = {\n        clientName: clientName.value // console.log(\"empData\", empData);\n\n      };\n      axios.post('API/insertclient.php', empData).then(res => {\n        // console.log(\"res\", res);\n        getClientdata();\n        notify();\n        afterclose();\n        return res;\n      }).catch(err => {\n        console.log(\"err\", ...err);\n      });\n      setTimeout(() => {\n        setclientName(initialName);\n        setclientAddress(initialAddress);\n        setclientArea(initialclientArea);\n        setclientContact(initialContact);\n        setclientAltContact(initialAltContact);\n        setserviceHrs(initialServiceHrs);\n        setclientAmount(initialclientAmount);\n        setIsSubmitting(false);\n      }, 1000);\n    } else {\n      setIsSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    getAreas();\n    test();\n  }, []);\n  useEffect(() => {\n    setclientName(_objectSpread({}, clientName, {\n      error: validate(clientName)\n    }));\n  }, [clientName.value]);\n  useEffect(() => {\n    setclientAddress(_objectSpread({}, clientAddress, {\n      error: validate(clientAddress)\n    }));\n  }, [clientAddress.value]);\n  useEffect(() => {\n    setclientArea(_objectSpread({}, clientArea, {\n      error: validate(clientArea)\n    }));\n  }, [clientArea.value]);\n  useEffect(() => {\n    setclientContact(_objectSpread({}, clientContact, {\n      error: validate(clientContact)\n    }));\n  }, [clientContact.value]);\n  useEffect(() => {\n    setclientAltContact(_objectSpread({}, clientAltContact, {\n      error: validate(clientAltContact)\n    }));\n  }, [clientAltContact.value]);\n  useEffect(() => {\n    setserviceHrs(_objectSpread({}, serviceHrs, {\n      error: validate(serviceHrs)\n    }));\n  }, [serviceHrs.value]);\n  useEffect(() => {\n    setclientAmount(_objectSpread({}, clientAmount, {\n      error: validate(clientAmount)\n    }));\n  }, [clientAmount.value]);\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    id: \"registrationForm\",\n    action: \"/\",\n    method: \"POST\",\n    onSubmit: e => submitData(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Col, {\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Enter Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientName\",\n    value: clientName.value,\n    placeholder: \"Enter Name\",\n    onChange: e => setclientName(_objectSpread({}, clientName, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientName(_objectSpread({}, clientName, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), isError(clientName) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, clientName.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextaddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Select Client Area\"), React.createElement(SelectDropdown, {\n    name: \"clientArea\",\n    value: clientArea.value,\n    data: {\n      list: areaOptions\n    },\n    isMulti: false,\n    isSearchable: true,\n    onChange: e => {\n      setclientArea(_objectSpread({}, clientArea, {\n        value: e\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), isError(clientArea) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, clientArea.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextaddress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Enter Client Address\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientAddress\",\n    value: clientAddress.value,\n    placeholder: \"Enter Address\",\n    onChange: e => setclientAddress(_objectSpread({}, clientAddress, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientAddress(_objectSpread({}, clientAddress, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), isError(clientAddress) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, clientAddress.error)))), React.createElement(Col, {\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextcontact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Enter Client Contact\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientContact\",\n    value: clientContact.value,\n    placeholder: \"Enter Contact\",\n    onChange: e => setclientContact(_objectSpread({}, clientContact, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientContact(_objectSpread({}, clientContact, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), isError(clientContact) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, clientContact.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextcontact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Enter Client Alt. Contact\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"clientAltContact\",\n    value: clientAltContact.value,\n    placeholder: \"Enter Alternate Contact\",\n    onChange: e => setclientAltContact(_objectSpread({}, clientAltContact, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientAltContact(_objectSpread({}, clientAltContact, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), isError(clientAltContact) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, clientAltContact.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextcontact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Enter Service Hours\"), React.createElement(SelectDropdown, {\n    name: \"clientArea\",\n    value: serviceHrs.value,\n    data: {\n      list: Workinghrs\n    },\n    isMulti: false,\n    isSearchable: true,\n    onChange: e => {\n      setserviceHrs(_objectSpread({}, serviceHrs, {\n        value: e\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), isError(clientAltContact) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, clientAltContact.error))), React.createElement(Form.Group, {\n    as: Row,\n    className: \"mb-3\",\n    controlId: \"formPlaintextcontact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Enter Client Discuss Amount\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"initialclientAmount\",\n    value: clientAmount.value,\n    placeholder: \"Enter Discuss Amount\",\n    onChange: e => setclientAmount(_objectSpread({}, clientAmount, {\n      value: e.target.value\n    })),\n    onBlur: () => setclientAmount(_objectSpread({}, clientAmount, {\n      touched: true\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), isError(clientAmount) && React.createElement(\"p\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, clientAmount.error)))))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"float-end\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default AddClients;\nconst formstyle = {\n  border: '1px solid',\n  // width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  width: '30vw',\n  margin: '0 auto'\n};\nconst forminputfield = {\n  margin: '10px'\n};","map":{"version":3,"sources":["/home/rudransh/public_html/MERN/react-node-ecommerce-front/src/admin/AddUser.js"],"names":["React","useState","useContext","useEffect","axios","Authcontext","Button","Col","Container","Form","Row","SelectDropdown","ToastContainer","toast","initialName","key","value","error","touched","regex","required","AddClients","getClientdata","afterclose","auth","clientName","setclientName","isSubmitting","setIsSubmitting","validate","obj","test","isError","notify","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","submitData","e","preventDefault","empData","post","then","res","catch","err","console","log","setTimeout","setclientAddress","initialAddress","setclientArea","initialclientArea","setclientContact","initialContact","setclientAltContact","initialAltContact","setserviceHrs","initialServiceHrs","setclientAmount","initialclientAmount","getAreas","clientAddress","clientArea","clientContact","clientAltContact","serviceHrs","clientAmount","target","list","areaOptions","Workinghrs","formstyle","border","display","alignItems","justifyContent","flexDirection","width","margin","forminputfield"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { Authcontext } from '../../../config/AppRoutes'\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport SelectDropdown from '../../component/SelectDropdown';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialName = {\n  key: \"clientName\",\n  value: \"\",\n  error: false,\n  touched: false,\n  regex: /^[A-Za-z]/,\n  required: true\n};\n\n\n\nconst AddClients = ({ getClientdata, afterclose }) => {\n\n\n  const auth = useContext(Authcontext);\n  // console.log(\"Auth\", auth.state)\n  const [clientName, setclientName] = useState(initialName);\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n\n\n  const validate = (obj) => {\n    let error;\n    if (!obj.value) {\n      error = \"Required\";\n    } else if (!obj.regex.test(obj.value)) {\n      error = `Invalid ${obj.key}`;\n    }\n    return error;\n  };\n\n\n  const isError = obj => obj.error && obj.touched && obj.required;\n\n  \n  const notify = () => toast.success(\"Changes Done!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n  });\n\n  const submitData = (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    setclientName({ ...clientName, error: validate(clientName), touched: true });\n\n    if (!clientName.error) {\n      const empData = {\n        clientName: clientName.value,\n      }\n\n      // console.log(\"empData\", empData);\n\n      axios.post('API/insertclient.php', empData).then((res) => {\n        // console.log(\"res\", res);\n        getClientdata();\n        notify()\n        afterclose();\n        return res\n      }).catch((err) => {\n        console.log(\"err\", ...err)\n      })\n\n      setTimeout(() => {\n\n        setclientName(initialName);\n        setclientAddress(initialAddress);\n        setclientArea(initialclientArea)\n        setclientContact(initialContact);\n        setclientAltContact(initialAltContact);\n        setserviceHrs(initialServiceHrs);\n        setclientAmount(initialclientAmount);\n        setIsSubmitting(false);\n      }, 1000);\n    } else {\n      setIsSubmitting(false);\n    }\n  }\n\n\n  useEffect(() => {\n    getAreas();\n    test();\n  }, []);\n\n\n  useEffect(() => {\n    setclientName({ ...clientName, error: validate(clientName) })\n  }, [clientName.value])\n\n  useEffect(() => {\n    setclientAddress({ ...clientAddress, error: validate(clientAddress) })\n  }, [clientAddress.value])\n\n  useEffect(() => {\n    setclientArea({ ...clientArea, error: validate(clientArea) })\n  }, [clientArea.value])\n\n  useEffect(() => {\n    setclientContact({ ...clientContact, error: validate(clientContact) })\n  }, [clientContact.value])\n\n  useEffect(() => {\n    setclientAltContact({ ...clientAltContact, error: validate(clientAltContact) })\n  }, [clientAltContact.value])\n\n  useEffect(() => {\n    setserviceHrs({ ...serviceHrs, error: validate(serviceHrs) })\n  }, [serviceHrs.value])\n\n  useEffect(() => {\n    setclientAmount({ ...clientAmount, error: validate(clientAmount) })\n  }, [clientAmount.value])\n\n\n\n  return (\n    <>\n      <form\n        id=\"registrationForm\"\n        action=\"/\"\n        method=\"POST\"\n        onSubmit={(e) => submitData(e)}\n      >\n        <Container>\n          <Row>\n            <ToastContainer />\n            <Col sm=\"6\">\n\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextname\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Name</Form.Label>\n\n                  <Form.Control type=\"text\"\n                    name=\"clientName\"\n                    value={clientName.value}\n                    placeholder=\"Enter Name\"\n                    onChange={(e) => setclientName({ ...clientName, value: e.target.value })}\n                    onBlur={() => setclientName({ ...clientName, touched: true })}\n                  />\n\n                  {isError(clientName) && <p className='text-danger'>{clientName.error}</p>}\n\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextaddress\">\n                <Col sm=\"12\">\n                  <Form.Label>Select Client Area</Form.Label>\n                  <SelectDropdown\n                    name=\"clientArea\"\n                    value={clientArea.value}\n                    data={{ list: areaOptions }}\n                    isMulti={false}\n                    isSearchable={true}\n                    onChange={(e) => {\n                      setclientArea({ ...clientArea, value: e })\n                    }}\n                  />\n                  {isError(clientArea) && <p className='text-danger'>{clientArea.error}</p>}\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextaddress\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Client Address</Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"clientAddress\"\n                    value={clientAddress.value}\n                    placeholder=\"Enter Address\"\n                    onChange={(e) => setclientAddress({ ...clientAddress, value: e.target.value })}\n                    onBlur={() => setclientAddress({ ...clientAddress, touched: true })}\n                  />\n                  {isError(clientAddress) && <p className='text-danger'>{clientAddress.error}</p>}\n                </Col>\n              </Form.Group>\n\n\n            </Col>\n            <Col sm=\"6\">\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextcontact\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Client Contact</Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"clientContact\"\n                    value={clientContact.value}\n                    placeholder=\"Enter Contact\"\n                    onChange={(e) => setclientContact({ ...clientContact, value: e.target.value })}\n                    onBlur={() => setclientContact({ ...clientContact, touched: true })}\n                  />\n                  {isError(clientContact) && <p className='text-danger'>{clientContact.error}</p>}\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextcontact\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Client Alt. Contact</Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"clientAltContact\"\n                    value={clientAltContact.value}\n                    placeholder=\"Enter Alternate Contact\"\n                    onChange={(e) => setclientAltContact({ ...clientAltContact, value: e.target.value })}\n                    onBlur={() => setclientAltContact({ ...clientAltContact, touched: true })}\n                  />\n                  {isError(clientAltContact) && <p className='text-danger'>{clientAltContact.error}</p>}\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextcontact\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Service Hours</Form.Label>\n                  <SelectDropdown\n                    name=\"clientArea\"\n                    value={serviceHrs.value}\n                    data={{\n                      list: Workinghrs\n                    }}\n                    isMulti={false}\n                    isSearchable={true}\n                    onChange={(e) => {\n                      setserviceHrs({ ...serviceHrs, value: e })\n                    }}\n                  />\n                  {isError(clientAltContact) && <p className='text-danger'>{clientAltContact.error}</p>}\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextcontact\">\n                <Col sm=\"12\">\n                  <Form.Label>Enter Client Discuss Amount</Form.Label>\n                  <Form.Control type=\"text\"\n                    name=\"initialclientAmount\"\n                    value={clientAmount.value}\n                    placeholder=\"Enter Discuss Amount\"\n                    onChange={(e) => setclientAmount({ ...clientAmount, value: e.target.value })}\n                    onBlur={() => setclientAmount({ ...clientAmount, touched: true })}\n                  />\n                  {isError(clientAmount) && <p className='text-danger'>{clientAmount.error}</p>}\n                </Col>\n              </Form.Group>\n            </Col>\n          </Row>\n        </Container>\n        <hr />\n        {/* <Button className='float-right'>Submit</Button> */}\n        <Button className='float-end' type=\"submit\" disabled={isSubmitting}>\n          Submit\n        </Button>\n      </form>\n    </>\n  );\n\n}\n\nexport default AddClients;\n\n\nconst formstyle = {\n  border: '1px solid',\n  // width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  width: '30vw',\n  margin: '0 auto',\n}\nconst forminputfield = {\n  margin: '10px'\n}\n"]},"metadata":{},"sourceType":"module"}